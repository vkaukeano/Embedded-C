#include <avr/io.h>
#include <avr/interrupt.h>
#define F_CPU 16000000UL
#include <util/delay.h>
#include "SSD1306.h"

#define PINGPin PD0
#define ECHOPin PD1

volatile int dist = 0;
char str[100];
volatile int count = 0;
char text[] = "TEMPLE";
int main(){
	
	OLED_Init();
	_delay_ms(1);
	OLED_Clear();
	
	DDRA = 0xFF;
	DDRD=0xFF;
	
	PORTD|= (1<<0);
	PORTD|= (1<<1);
	
	PCICR |= (1<<PCIE3);
	PCIFR |= (1<<PCIF3);
	PCMSK3 |= (1<<PCINT24)|(1<<PCINT25);
	TCCR2B =(1<<CS21);
	
	TIMSK2 = (1<<TOIE2);
	OCR2B = 255;
	sei();
	
	while (1)
	{
		OLED_SetCursor(0,0);
		OLED_SetCursor(1,0);
		OLED_DisplayString(text);
		OLED_SetCursor(4,0);
		OLED_Printf("Distance:");
		OLED_DisplayFloatNumber(dist);
		
		if(dist <= 5){
			PORTA=0xFF;
			PORTD = 0b00000100;
			_delay_ms(1.3);
			PORTD = 0b00000000;
			_delay_ms(20);
		}
		
		else if(dist >= 6 & dist <= 19){
			
			if(dist >= 6){
				PORTA = 0xFF;
				_delay_ms(500);
				PORTA = 0x00;
				_delay_ms(200);
			}
			
			else if(dist >= 10){
				PORTA = 0xFF;
				_delay_ms(500);
				PORTA = 0x00;
				_delay_ms(100);				
			}
			
			else if(dist >= 15){
				PORTA = 0xFF;
				_delay_ms(500);
				PORTA = 0x00;
				_delay_ms(50);
			}
				
			else if(dist >= 17){
				PORTA = 0xFF;
				_delay_ms(500);
				PORTA = 0x00;
				_delay_ms(20);
			}
				

		}
		
		else if(dist >= 20){
			PORTA = 0x00;
			PORTD = 0b00000100;
			_delay_ms(1.7);
			PORTD = 0b00000000;
			_delay_ms(20);
		}

	}
	
}

ISR(TIMER2_OVF_vect){
	if(OCR2B == 255){
		TCCR2B = (1<<CS21);
		DDRD |= (1<<PINGPin);
		PORTD |= (1<<PINGPin);
		OCR2B = 3;
		return;
	}
	else if(OCR2B == 3){
		PORTD &= ~(1<<PINGPin);
		OCR2B = 2;
		return;
	}
	
	else if(OCR2B == 2){
		DDRD &= ~(1<<ECHOPin);
		OCR2B = 255;
		TCCR2B = (1<<CS22)|(1<<CS21);
		return;
	}
	
}

ISR(PCINT3_vect){
	count++;
	if(count == 3)
	TCNT2 = 0;
	
	if(count == 4){
		dist=(TCNT2*.214);
		OCR2B = 255;
		count = 0;
		return;
	}

	return;
}
